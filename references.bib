@INPROCEEDINGS{Source1,
author={T. {Fujii} and T. {Dohi} and T. {Fujiwara}},
booktitle={2011 33rd International Conference on Software Engineering (ICSE)},
title={Towards quantitative software reliability assessment in incremental development processes},
year={2011},
volume={},
number={},
pages={41-50},
keywords={iterative methods;software metrics;software reliability;stochastic processes;incremental development processes;iterative development;development process model;quantitative software reliability assessment method;familiar nonhomogeneous Poisson processes;software metrics;incremental testing;associated software reliability measures;incremental developmental project data;software reliability estimation;realistic value;reliability growth phenomenon;incremental development scheme;Software;Software reliability;Testing;Software metrics;Data models;data analysis;incremental development;maximum likelihood estimation;non-homogeneous poisson processes;software metrics;software reliability},
doi={10.1145/1985793.1985800},
ISSN={1558-1225},
month={May},}

@INPROCEEDINGS{Source2,
author={D. R. {Graham}},
booktitle={IEE Colloquium on Software Prototyping and Evolutionary Development},
title={Incremental development and delivery for large software systems},
year={1992},
volume={},
number={},
pages={2/1-2/9},
keywords={configuration management;software engineering;large software systems;software development;partial products;project timescale;incremental delivery;life cycle products;testing;training;documentation;configuration management;large system development;Software engineering},
doi={},
ISSN={},
month={Nov},}

@INPROCEEDINGS{Source3,
author={S. {Ikemoto} and T. {Dohi} and H. {Okamura}},
booktitle={2013 Joint Conference of the 23rd International Workshop on Software Measurement and the 8th International Conference on Software Process and Product Measurement},
title={Estimating Software Reliability with Static Project Data in Incremental Development Processes},
year={2013},
volume={},
number={},
pages={219-224},
keywords={regression analysis;software metrics;software quality;software reliability;stochastic processes;quantitative software reliability;static project data;incremental development process;static fault count data;static metrics data;time series;metrics-based software reliability model;nonhomogeneous Poisson process;multiple linear regression model;Software;Software reliability;Software metrics;Numerical models;System testing;Fault detection;software reliability;incremental development;software metrics;static project data;multiple linear regression;non-homogeneous Poisson process;goodness-of-fit},
doi={10.1109/IWSM-Mensura.2013.38},
ISSN={},
month={Oct},}

@INPROCEEDINGS{Source4,
author={P. {Mohagheghi} and B. {Anda} and R. {Conradi}},
booktitle={Proceedings. 27th International Conference on Software Engineering, 2005. ICSE 2005.},
title={Effort estimation of use cases for incremental large-scale software development},
year={2005},
volume={},
number={},
pages={303-311},
keywords={software development management;team working;project management;effort estimation;incremental large-scale software development;use case points;complexity assessment;nonfunctional requirements;team factors;Computer aided software engineering;Large-scale systems;Programming;Computer industry;Unified modeling language;Information science;Laboratories;Permission;Educational institutions;Software engineering},
doi={10.1109/ICSE.2005.1553573},
ISSN={0270-5257},
month={May},}

@INPROCEEDINGS{Source5,
author={P. {Trivedi} and A. {Sharma}},
booktitle={2013 2nd International Conference on Information Management in the Knowledge Economy},
title={A comparative study between iterative waterfall and incremental software development life cycle model for optimizing the resources using computer simulation},
year={2013},
volume={},
number={},
pages={188-194},
keywords={DP industry;iterative methods;software product lines;iterative waterfall simulation;incremental software development life cycle model;computer simulation;resource optimization;minimum resource;software industry;software engineering;software product development;software process models;iterative incremental model;SDLC model;random inter arrival time;optimal resource;Software;Industries;Maintenance engineering;Testing;Computational modeling;Business;Analytical models;Science;Software engineering;Software process model;Iterative waterfall model;Increment model;Simphony model;Simphony .NET},
doi={},
ISSN={},
month={Dec},}

@INPROCEEDINGS{Source7,
author={T. {Tan} and Q. {Li} and B. {Boehm} and Y. {Yang} and M. {He} and R. {Moazeni}},
booktitle={2009 3rd International Symposium on Empirical Software Engineering and Measurement},
title={Productivity trends in incremental and iterative software development},
year={2009},
volume={},
number={},
pages={1-10},
keywords={iterative methods;program testing;software engineering;incremental software development;iterative software development;commercial software project;staffing stability;design compatibility;productivity trends;Productivity;Programming;Software engineering;Software measurement;Production;Data analysis;Size measurement;Helium;Stability;Software testing},
doi={10.1109/ESEM.2009.5316044},
ISSN={1949-3770},
month={Oct},}

@INPROCEEDINGS{Source8,
author={D. {Liu} and S. {Xu} and W. {Du}},
booktitle={2011 Ninth International Conference on Software Engineering Research, Management and Applications},
title={Case Study on Incremental Software Development},
year={2011},
volume={},
number={},
pages={227-234},
keywords={quality assurance;software architecture;software quality;user interfaces;software evolution;software design;software architecture;user interface;programming interface;source code reuse;software quality assurance;incremental software development;Color;Programming;Software;User interfaces;Real time systems;Encoding;Java;Software evolution;programming interface;incremental software development;case study;design patterns.},
doi={10.1109/SERA.2011.43},
ISSN={},
month={Aug},}

@ARTICLE{Source9,
author={P. E. {Ross}},
journal={IEEE Spectrum},
title={The exterminators [software bugs]},
year={2005},
volume={42},
number={9},
pages={36-41},
keywords={software engineering;formal logic;program debugging;software bugs;Praxis High Integrity Systems;software experts;software project;software engineering methods;mathematical logic;formal methods;software development;bug-free software;Computer bugs;Logic},
doi={10.1109/MSPEC.2005.1502527},
ISSN={0018-9235},
month={Sep.},}


@book{fowler_refactoring:_2018,
	title = {Refactoring: {Improving} the {Design} of {Existing} {Code}},
	isbn = {9780134757704},
	shorttitle = {Refactoring},
	abstract = {Fully Revised and Updated–Includes New Refactorings and Code Examples  “Any fool can write code that a computer can understand. Good programmers write code that humans can understand.”  —M. Fowler (1999)For more than twenty years, experienced programmers worldwide have relied on Martin Fowler’s Refactoring to improve the design of existing code and to enhance software maintainability, as well as to make existing code easier to understand.    This eagerly awaited new edition has been fully updated to reflect crucial changes in the programming landscape.  Refactoring, Second Edition,  features an updated catalog of refactorings and includes JavaScript code examples, as well as new functional examples that demonstrate refactoring without classes.    Like the original, this edition explains what refactoring is; why you should refactor; how to recognize code that needs refactoring; and how to actually do it successfully, no matter what language you use.  Understand the process and general principles of refactoring Quickly apply useful refactorings to make a program easier to comprehend and change Recognize “bad smells” in code that signal opportunities to refactor Explore the refactorings, each with explanations, motivation, mechanics, and simple examples Build solid tests for your refactorings Recognize tradeoffs and obstacles to refactoring   Includes free access to the canonical web edition, with even more refactoring resources. (See inside the book for details about how to access the web edition.)},
	language = {en},
	publisher = {Addison-Wesley Professional},
	author = {Fowler, Martin},
	month = nov,
	year = {2018},
	note = {Google-Books-ID: 2H1\_DwAAQBAJ},
	keywords = {Computers / Programming / Object Oriented, Computers / Software Development \& Engineering / General}
}
